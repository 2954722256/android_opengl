#version 400

uniform mat4 gWorld;
uniform mat4 gWorldInvTranspose;
uniform mat4 gWorldViewProj;
uniform mat4 gTexTransform;
uniform mat4 gShadowTransform;

layout (location  = 0) in vec3 PosL;
layout (location  = 1) in vec3 NormalL;
layout (location  = 2) in vec2 Tex;
layout (location  = 3) in vec3 TangentL;

out VertexOut
{
   vec3 PosW;
   vec3 NormalW;
   vec4 TangentW;
   vec2 Tex;
   vec4 ShadowPosH;
}vout;

void main()
{
   // Transform to world space space.
   vout.PosW = (gWorld * vec4(PosL, 1.0)).xyz;
   vout.NormalW = mat3(gWorldInvTranspose) * NormalL;
   vout.TangentW = vec4(mat3(gWorld) * TangentL, 1.0);
   
   vout.Tex = (gTexTransform * vec4(Tex, 0.0, 1.0)).xy;
   
   // Generate projective tex-coords to project shadow map onto scene.
   vout.ShadowPosH = gShadowTransform * vec4(PosL, 1.0);
   
   // Transform to homogeneous clip space.
   gl_Position = gWorldViewProj * vec4(PosL, 1.0);
}
#version 400 core

layout( points ) in;
layout( line_strip, max_vertices = 2) out;

#define PT_EMITTER 0
#define PT_FLARE 1

uniform mat4 gViewProj;
uniform vec3 gAccelW = vec3(-1.0f, -9.8f, 0.0f);

in VertexOut
{
	vec3 PosW;//  : POSITION;
	uint Type;//  : TYPE;
}gin[];

out vec2 Tex;

void main()
{
   // do not draw emitter particles.
	if( gin[0].Type != PT_EMITTER )
	{
		// Slant line in acceleration direction.
		vec3 p0 = gin[0].PosW;
		vec3 p1 = gin[0].PosW + 0.07f*gAccelW;
		
		// = mul(float4(p0, 1.0f), gViewProj);
		gl_Position = gViewProj * vec4(p0, 1.0);
		Tex = vec2(0.0f, 0.0f);
		EmitVertex();
		
//		v1.PosH = mul(float4(p1, 1.0f), gViewProj);
//		v1.Tex  = float2(1.0f, 1.0f);
		gl_Position = gViewProj * vec4(p1, 1.0);
		Tex = vec2(1.0f, 1.0f);
		EmitVertex();
	}
}